name: Build Latest

on:
  workflow_dispatch:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 1

      - name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/szinn/wordacle
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest
            type=sha

      # - name: Setup workflow Variables
      #   id: vars
      #   shell: bash
      #   run: |-
      #     VERSION="latest"
      #     if test "$GITHUB_EVENT_NAME" == "workflow_dispatch"; then
      #       VERSION=$(cat VERSION)
      #     fi
      #     echo "::set-output name=version::$VERSION"
      #     echo "::set-output name=tag_version::tesla-spy:$VERSION"

      # - name: Setup QEMU
      #   uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Build container image
        uses: docker/build-push-action@4f7cdeb0f05278b464e71357394bf2c61f94138e # v6
        with:
          # build-args: |-
          #   VERSION=${{ steps.vars.outputs.version }}
          context: .
          platforms: linux/amd64 # load does not support muti-arch https://github.com/docker/buildx/issues/290
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
